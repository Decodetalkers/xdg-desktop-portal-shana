import { Button, VerticalBox , HorizontalBox, ScrollView, GroupBox, ComboBox} from "std-widgets.slint";

export struct FileUnit := {
    name: string,
    owner: string,
    is_fold: bool,
    permission: int,
    file_path: string,
    mimetype: string,
}

export global GlobalFiles := {
    property <[FileUnit]> left: [];
    property <[FileUnit]> right: [];
    property <[string]> filiter :[];
    property <string> current-path: "" ;
    property <bool> is_select_fold: false ;
    property <int> current-filiter:-1 ;
}

export AppWindow := Window {
    property <string> m_title : "" ;
    property <int> counter: 42;
    callback select_file();
    callback cancel_selected();
    callback change_filiter(int,int);
    title <=> m_title;
    HorizontalBox {
        VerticalBox {
            max-width: 300px;
            GroupBox { 
                title: "Filiter";
                filitermode := ComboBox {
                    model <=> GlobalFiles.filiter;
                    current-index <=> GlobalFiles.current-filiter;
                    selected => {
                        change-filiter(current-index,showmode.current-index);
                    }
                }
            }
            GroupBox { 
                title: "Show";
                showmode := ComboBox { 
                    model: ["visible", "all","onlyHidden"];
                    current-index: 0;
                    selected => { 
                        change-filiter(filitermode.current-index,current-index);
                    }
                }
            }
        }
        VerticalBox {
            HorizontalBox {
                ScrollView {
                    VerticalBox { 
                        for unit in  GlobalFiles.left : Button { 
                            text: unit.name;
                        }
                    }
                }
                ScrollView { 
                    VerticalBox { 
                        for unit in  GlobalFiles.left : Button { 
                            text: unit.name;
                        }
                    }
                }
            }
            HorizontalBox {
                alignment: end;
                Button {
                    text: "Select";
                    clicked => { 
                        select-file();
                    }
                }
                Button {
                    text: "Cancel";
                    clicked => { 
                        cancel-selected();
                    }
                }
            }
        }
    }
}
