import {StandardListView, Button, VerticalBox , HorizontalBox, ScrollView, GroupBox, ComboBox, ListView, CheckBox} from "std-widgets.slint";

import {FileUnit, GlobalFiles, DefaultAsserts} from "global.slint";

export { 
    GlobalFiles,
    DefaultAsserts
}

export AppWindow := Window {
    property <string> m_title;
    property <bool> show_preview : false ;
    callback select_file();
    callback cancel_selected();
    // filiter , showmode, file_path, left or right
    callback change_filiter(int, string, int);
    callback change_superpath();
    callback set_preview_image(string,string);
    title <=> m_title;
    forward-focus: top-key-handle;
    top-key-handle := FocusScope {
        key-pressed => { 
            left.focus();
            accept
        }
    }
    HorizontalBox {
        VerticalBox {
            max-width: 300px;
            GroupBox { 
                title: "Filiter";
                ScrollView { 
                    VerticalBox {  
                        for unit in GlobalFiles.filiter: CheckBox {
                            text: unit.filiter;
                            checked: unit.selected;
                            toggled => { 
                                unit.selected = checked;
                                change_filiter(
                                    //filitermode.current-index,
                                    showmode.current-index,
                                    GlobalFiles.current-path,
                                    0
                                );
                                change_filiter(
                                    //filitermode.current-index,
                                    showmode.current-index,
                                    GlobalFiles.left[left.selected].file_path,
                                    1
                                );
                            }
                        }
                    }
                }
            }
            GroupBox { 
                title: "Show";
                showmode := ComboBox { 
                    model: ["visible", "all","onlyHidden", "onlyfile", "onlyfolder"];
                    current-index: 0;
                    selected => { 
                        change_filiter(
                            //filitermode.current-index,
                            current-index,
                            GlobalFiles.current-path,
                            0
                        );
                        change_filiter(
                            //filitermode.current-index,
                            showmode.current-index,
                            GlobalFiles.left[left.selected].file_path,
                            1
                        );
                    }
                }
            }
            GroupBox { 
                title: "selected file";
                ListView { 
                    for items in GlobalFiles.left: Text {
                        height: items.beselected ? 30px : 0px;
                        text: items.name;
                    }
                }
            }
        }
        VerticalBox {
            Text { 
                text: GlobalFiles.current-path;
            }
            HorizontalBox {
                left := ScrollView {
                    property <int> selected : -1 ;
                    min-width: 300px;
                    VerticalBox { 
                        for unit[index] in  GlobalFiles.left : Rectangle { 
                            background: index == left.selected ? gray : root.background;
                            HorizontalBox {
                                Image { 
                                    source: unit.image;
                                    width: 50px;
                                    height: 50px;
                                }
                                VerticalBox { 
                                    padding: 10px;
                                    alignment: center;
                                    Rectangle { 
                                        background: unit.permission == 1 || unit.permission == 3 ?
                                            unit.is_fold ? 
                                                GlobalFiles.is-select-fold ?
                                                    unit.beselected ?
                                                        red 
                                                        : 
                                                        gray
                                                    : 
                                                    darkgray
                                                :
                                                !GlobalFiles.is-select-fold ?
                                                    unit.beselected ?
                                                        red 
                                                        : 
                                                        gray
                                                    : 
                                                    darkgray
                                        : 
                                        darkgray;
                                        width: 10px;
                                        height: 10px;
                                    }
                                }
                                VerticalBox { 
                                    Text {
                                        text: unit.name;
                                        color: unit.permission == 1 || unit.permission == 3 ? black : darkgray;
                                        font-weight: 10;
                                        font-size: 20px;
                                    }
                                    HorizontalBox {
                                        Text { 
                                            text: unit.owner;
                                            font-weight: 1;
                                            font-size: 15px;
                                        }
                                        if !unit.is_fold : Rectangle { 
                                            background: pink;
                                            border-radius: 15px;
                                            width: 98px;
                                            height: 20px;
                                            Text { 
                                                text: "  \{unit.mimetype}"; 
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    forward-focus: key-filechooser;
                    key-filechooser := FocusScope {
                        key-pressed(event) => {
                            if (event.text == " ") {
                                if (
                                    (
                                        (GlobalFiles.left[left.selected].is_fold && GlobalFiles.is-select-fold)
                                        ||
                                        (!GlobalFiles.left[left.selected].is_fold && !GlobalFiles.is-select-fold)
                                    )
                                && 
                                    (
                                        GlobalFiles.left[left.selected].permission == 1 
                                        ||
                                        GlobalFiles.left[left.selected].permission == 3
                                    )
                                ) {
                                    GlobalFiles.left[left.selected].beselected = !GlobalFiles.left[left.selected].beselected;
                                    if (GlobalFiles.signalfile && GlobalFiles.last-selected != -1) {
                                        GlobalFiles.left[GlobalFiles.last-selected].beselected = false;
                                    }
                                    GlobalFiles.last-selected = left.selected;
                                }
                            }
                            if (event.text == Keys.DownArrow) {
                                if (left.selected >= GlobalFiles.left.length - 1) {
                                    left.selected = 0;
                                    left.viewport-y = 0;
                                } else {
                                    left.selected += 1;
                                    left.viewport-y = -1 *left.selected * 98px;
                                }
                            }
                            if (event.text == Keys.UpArrow) {
                                if (left.selected <= 0 ) {
                                    left.selected = GlobalFiles.left.length - 1;
                                    left.viewport-y = -1 * (GlobalFiles.left.length - 1) * 98px;
                                } else {
                                    left.selected -= 1;
                                    left.viewport-y = -1 * left.selected * 98px;
                                }
                            }
                            if (event.text == Keys.Return && GlobalFiles.left[left.selected].permission == 1) {
                                if(GlobalFiles.left[left.selected].is_fold) {
                                    GlobalFiles.current-path = GlobalFiles.left[left.selected].file_path;
                                    change_filiter(
                                        //filitermode.current-index,
                                        showmode.current-index,
                                        GlobalFiles.current-path,
                                        0
                                    );
                                    left.selected = -1;
                                    GlobalFiles.last-selected = left.selected;
                                }
                            }
                            if (GlobalFiles.left[left.selected].is_fold && GlobalFiles.left[left.selected].permission == 1) {
                                show-preview = true;
                                change_filiter(
                                    //filitermode.current-index,
                                    showmode.current-index,
                                    GlobalFiles.left[left.selected].file_path,
                                    1
                                );
                            } else {
                                show-preview = false;
                            }


                            if (event.text == Keys.LeftArrow) {
                                change-superpath();
                                change_filiter(
                                    //filitermode.current-index,
                                    showmode.current-index,
                                    GlobalFiles.current-path,
                                    0
                                );
                                left.selected = -1;
                            }

                            if (event.text == Keys.RightArrow && show-preview) {
                                right.focus();
                            }
                            
                            if (GlobalFiles.left[left.selected].sourcetype == 1) {
                                set_preview_image(
                                    GlobalFiles.left[left.selected].mimetype,
                                    GlobalFiles.left[left.selected].file_path
                                );
                            }
                            accept
                        }
                    }
                }
                right := ScrollView {
                    width: show-preview ? 500px : 0px;
                    property <int> selected : -1 ;
                    VerticalBox { 
                        for unit[index] in  GlobalFiles.right : Rectangle { 
                            background: index == right.selected ? gray : root.background;
                            HorizontalBox {
                                VerticalBox { 
                                    Text { 
                                        text: unit.name;
                                        font-weight: 10;
                                        font-size: 20px;
                                    }
                                    HorizontalBox {
                                        Text { 
                                            text: unit.owner;
                                            font-weight: 1;
                                            font-size: 15px;
                                        }
                                        if !unit.is_fold : Rectangle { 
                                            background: pink;
                                            border-radius: 15px;
                                            width: 98px;
                                            height: 20px;
                                            Text { 
                                                text: "  \{unit.mimetype}"; 
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    forward-focus: key-filechooser_right;
                    key-filechooser_right := FocusScope {
                        key-pressed(event) => {
                            if (event.text == Keys.DownArrow) {
                                if (right.selected >= GlobalFiles.right.length - 1) {
                                    right.selected = 0;
                                    right.viewport-y = 0;
                                } else {
                                    right.selected += 1;
                                    right.viewport-y = -1 *right.selected * 98px;
                                }
                            }
                            if (event.text == Keys.UpArrow) {
                                if (right.selected <= 0) {
                                    right.selected = GlobalFiles.right.length - 1;
                                    right.viewport-y = -1 * (GlobalFiles.right.length - 1) * 98px;
                                } else {
                                    right.selected -= 1;
                                    right.viewport-y = -1 * right.selected * 98px;
                                }
                            }

                            if (event.text == Keys.LeftArrow) {
                                right.selected = -1;
                                left.focus();
                            }
                            accept
                        }
                    }
                }
            }
            HorizontalBox {
                alignment: end;
                Button {
                    text: "Select";
                    clicked => { 
                        select-file();
                    }
                }
                Button {
                    text: "Cancel";
                    clicked => { 
                        cancel-selected();
                    }
                }
            }
        }
        if (GlobalFiles.left[left.selected].sourcetype == 1) : VerticalBox {
            Image { 
                source: GlobalFiles.preview-image;
            }
        }
    }
}
